{"roles": [
    {"roleId": "Software Engineering Director",
        "purpose":"",
        "responsibilities":""},
    {"roleId": "Head of Software Product Lines and Capability",
        "purpose":"",
        "responsibilities":"",
        "employees":[
            { "fullName":"ARNAUD_HELINE"}]
    },
    {"roleId": "Head of Software Engineering",
        "purpose":"Delivering executive leadership to the Software Engineering directorate within MBDA in the UK, accountable for developing & maintaining a strong software engineering capability and taking full accountability for the delivery of MBDA software products for the UK.",
        "responsibilities":"Directing Software Engineering UK ensuring high capability and the correct development strategy to deliver for MBDA.\nLeading the senior executive leadership team within the UK to deliver a best in class software capability and software products.\nDirecting and delivering the strategy to enhance, maintain and sustain a highly adaptable software engineering organisation for MBDA in the UK.\nOwnership and delivery of vision for Software Engineering organisation in the UK.\nDeveloping new business strategies for the organisation and innovating technologies through empowerment.\nEmpowering people to deliver new ideas and ways of working through strategic coaching.\nOperational software business direction and overall leadership.\nTailor the International MBDA Software Strategy to the specific UK context, communicate it and monitor its deployment in the country.\nEnsure appropriate management of facilities and security at all UK sites for the delivery of robust Software Engineering capability.\nRecognise and nurture talents and implement a strategy for high performing teams and individuals in the UK.",
        "employees":[
            { "fullName":"RAJ BADIANI"}]
    },
    {"roleId": "Head of Software Department",
        "purpose":"To provide strategic direction and guidance to the Software Engineering Department and to engage in both the Software Centre of Excellence at a UK\/Fr level. \n\nEnsure the smooth running of the Software Engineering Department, whilst working closely with the Software Engineering Leadership team to contribute to the future development of the organisation in the UK.\n\nFull accountability for the delivery of MBDA software products by the department.",
        "responsibilities":"Management: Responsible for project resourcing and establishing a consistent workload. Maximise efficiency of department and continue to transform the working practices. Apply HR policies (performance review, salary increases, training plan etc.).\nPeople Development: Provide leadership, motivation and training for staff reporting to this post. Carry out a strategic resource skills analysis to ensure that members of the department are appropriately trained \/ skilled to meet the needs of the future technology progression. Support the graduate development programme.\nProduct Development: Support the development of a route map for the department software products & services. Support product policies and develop reusable components for the software product lines Contribute to make\/buy policy in software domain.\nProgramme Delivery: Agree and maintain project objectives and milestones.\nEngineering Coordination: Co-ordinate and collaborate with other functions \/ disciplines to ensure the company’s products are developed in the most effective and efficient manner.  \nCompetitiveness:  Identify areas for cost reduction through improving project efficiencies and supporting continuous process improvement.\nCommunication: Promote the international convergence and the technical\/management orientation of SE within UK\nInternationalisation: Support the convergence to international processes and practices.",
        "employees":[
            { "fullName":"ANDREW CAMERON"},
            { "fullName":"DAVID MACHIN"},
            { "fullName":"JONATHAN MOORE"},
            { "fullName":"PAUL NORMAN"}]
    },
    {"roleId": "Software Group Leader",
        "purpose":"Within the function hierarchy, lead a group of engineers providing the overall strategy and resolving issues in term of capability, resourcing and infrastructure.\n\nLead a group of Projects in order to create and maintain high performing teams able to deliver project milestones and commitments also in challenging context provide direction to group in line with the overall functional strategy towards capability, resourcing and infrastructure. \n\nThe Software Group Leader will also drive improvements in Software Engineering approaches at a group, department and functional level.\n\nFor any bids and estimates produce by the group the group leader will take the lead responsible role.\n\nThis includes resolving issues and challenges that present themselves to the teams in delivering project milestones and commitments in a constructive manner creating and maintain effective functional networks within MBDA.  \n\nFull accountability for the delivery of MBDA software products by the group.",
        "responsibilities":"People management (Career, Development, Skills, Motivation and Performance Management)\nSoftware Group Leaders are expected to solve complex challenges in the field of Software Engineering through leadership and empowerment of people.\nGuiding and supporting the development of software development plans and ensuring the correct capability mix is available to deliver the projects, includes software factory and infrastructure provisioning. This varies between Software Products and can present varied challenges that require forward thinking and clarity building skills.\nPeople management and development challenges are handled by the Software Group Leader – motivation, retention and managing critical knowledge is a challenge that the Software Group Leader ultimately owns.\nDelivery of process excellence into software development programmes and international process\/methods alignment. Improve processes for the organisation through regular review and update.\nResource management (Recruitment, Assignment, WLF Monitor & Control) – All resourcing activities are owned by the Software Group Leader working with Software Project Leaders and Senior Software Project Leaders to determine needs.\nMilestone Management for the Group (Including tracking, reporting and delivery involvement).\nOrganisation Deployment: The Software Group Leader is responsible for setting up new teams and deploying organisational breakdown of roles to meet the needs of a project.\nTechnical Approach & Product Lines: Guide and drive the technical approach in line with the group level strategy for the capability and develop and implement software product line concepts.",
        "projectDefault":true,
        "employees":[
            { "fullName":"AMY SHEPHERD"},
            { "fullName":"STUART DAGNALL"},
            { "fullName":"CLARE SOPP"},
            { "fullName":"DAVID EASTLAKE"}]
    },
    {"roleId": "Software Business Manager",
        "purpose":"Working closely with senior colleagues in the UK, France and Italy, coordinating the efficient management of workload forecasting, resource management, fiscal management and functional improvement programs to ensure that the business has full support in delivering both its current and future commitments.\n\nLead the business support team for the Software Engineering business in MBDA.",
        "responsibilities":"Establish and control the Software Engineering offload strategy. This includes forming and owning the offload strategy model and delivering the strategic model in a practical sense. \nProvide support to Software Project Leaders and Software Group Leaders in facilitating and setting up offload work packages.\nLead and deliver multinational Software Business practice and improvements \nLead international software process and guidance development maintaining a multinational agreement on the approach.\nSupply the Software Engineering Directorate Chief of Staff with metrics and data on a regular basis.\nDevelop the monthly report for the Software Engineering UK function working with the HoDs across Software Engineering.\nCollective direction of the workload forecast and strategic resourcing for the Software Engineering function within the UK. Prepare the overview picture of workload forecast for the Head of Software Engineering UK.\nManage and lead the strategic resourcing picture with the Heads of Department and in line with the strategy set by the Head of Software Engineering UK.\nMonitor and control the headcount levels across the MBDA sites for Software Engineering UK.\nMonitor and report on the Functional finance position. Take ownership of the 5 year functional Capital plan and lead the collection of inputs every year. Track Capital spend against the plan to ensure the investment is in line with the strategic plan. Monitor and control the functional finances in order to ensure the effective operation of the Software Engineering function.",
        "employees":[
            { "fullName":"ROB BURTON"}]
    },
    {"roleId": "Senior Software Project Leader",
        "purpose":"The SSPL is responsible for acting as a single point of contact for all software engineering related matters within a programme (eg. FC\/ASW). The SSPL communicates effectively and proactively with the chief engineer, other project leaders, software team leaders, customers, suppliers, and other relevant parties. The SSPL also enables the resolution of any Software related conflicts or issues that may arise at a programme level – for example, arising from emergent requirements outside the scope of individual subsystems.\n\nThe SSPL coordinates individual work packages to ensure coherent and timely delivery of functionality across the work packages comprising a complex product; accountability for OTOCOQ of individual work packages is retained by the work package manager and SPL.\n\nThis is a key delivery role within the Software Engineering function, achieved through influence and collaboration, acting as a trusted advisor.\n\nInstances of this role are determined by the Head of Department and require approval from the Head of Software Engineering – due to the dependency this role has on the size of the project.",
        "responsibilities":"In addition to the Software Project Leader responsibilities:\nWorking with Software Group Leaders to ensure resource requirements are understood and being communicated – this a collaboration that is critical to the success of this role.\nEnsure clear delegation of software design authority where appropriate and ensure that the Software Project Leaders own the time, cost and delivery aspects of the activity.\nEnsure that the Software Project Leaders are aligned in the delivery expectation against the plan and support the need to make decisions promptly to ensure the overall sub-system delivery plan is met.\nThe Senior Software Project Leader has the overview of the complete project plan and ensures that optimisation and synchronisation of Software Project Leaders activities and planning is effective, for the greater good.\nThe Senior Software Project Leader will optimise re-use, spot trends, make suggestions across the project, create and divert IRAD to help, via a strong relationship with the Software Group Leaders. This includes advocacy for the use of Software Product Lines.\nAct as the first point of software engagement for complex multi-equipment \/ multi-domain bid activity.\nIdentify and call appropriate project focused reviews to ensure that implementation remains aligned with expectation and need.\nManagement of transversal SW risks and opportunities.\nCoordinate the resolution of programme-level conflicts or issues that may arise during the software development process.\nEnsure that the emergent “software system of systems” properties are understood and addressed; where architectural requirements emerge, coordinate the architects to enable resolution.\nEnsure that product-wide safety and security issues are addressed through the software solution, coordinating with cyber & product security and systems safety stakeholders.",
        "employees":[
            { "fullName":"ANDREW STAINTON"},
            { "fullName":"SCOTT LONGDON"}]
    },
    {"roleId": "Software Project Leader",
        "purpose":"The Software Project Leader is responsible for the delivery of software development projects from initiation to completion. \n\nThey play a crucial role in ensuring project success by coordinating the efforts of cross-functional teams, managing and owning budgets, project timelines, quality and delivering software solutions that meet stakeholder requirements. \n\nThis involves accountability for authorising software releases;  negotiating scope to fit schedule\/budget and inputs into the Time Now Update reporting for the project. \n\nThe Software Project Leader combines technical knowledge with project management skills to drive project execution, facilitate effective communication, and ensure project goals are achieved. \n\nThe SPL effectively manages all third party supplier and resources to deliver delegated work packages that they are accountable for\n\nThe Software Project Leader is the Software Design Authority and the Work Package Manger and is accountable for the cost, quality and schedule aspects of the activity.",
        "responsibilities":"Project Planning and Execution: Collaborate with stakeholders to define project goals, scope, and deliverables. Develop comprehensive project plans, including schedules, resource allocation, and budgeting. Monitor project progress, identify and mitigate risks, and ensure adherence to project timelines and milestones.\nTeam Coordination and Leadership: Lead the software team(s) to deliver the agreed scope of work. Assign tasks, provide guidance, and foster a collaborative work environment. \nStakeholder Management: Engage and communicate with project stakeholders, product owners and executive leadership. Provide project updates, and address any concerns or issues. Manage stakeholder expectations and ensure alignment between project deliverables and stakeholder needs – this includes decision making for the software development.\nRisk Management and Issue Resolution: Identify project risks, dependencies, and obstacles that may impact project success. Develop risk mitigation strategies and contingency plans.\nProject Documentation and Reporting: Maintain accurate project documentation, including project plans and status reports. Track project progress and report on key metrics, such as schedule adherence, resource utilization, and budget allocation. Prepare project status updates for stakeholders and senior management.\nQuality Assurance and Process Improvement: Ensure adherence to software development best practices, quality assurance processes, and coding standards. Implement effective project management methodologies and tools. Continuously evaluate and improve project management processes to enhance efficiency and productivity.\nChange Management: Effectively manage changes in project scope, requirements, trade offs and priorities. Assess the impact of changes on project timelines, resources, and deliverables. Communicate changes to the team and stakeholders, adjust project plans as needed, and ensure alignment with project goals.",
        "projectDefault":true,
        "employees":[
            { "fullName":"JENNIFER KENNING"},
            { "fullName":"BEN RUSSELL"},
            { "fullName":"MICHAEL JEFFREY"},
            { "fullName":"ADRIAN PARSONS"},
            { "fullName":"JOHN REYNOLDS"},
            { "fullName":"WILLIAM WAI CHUN LEUNG"},
            { "fullName":"JULIA HALLIGAN"}]
    },
    {"roleId": "Software Team Leader",
        "purpose":"The Software Team Leader is responsible for leading a team of software developers to deliver high-quality software solutions. Adoption of a strong working relationship with the Software Project Leader to co-ordinate the team to meet the needs of the overall plan. \n\nThey play a critical role in guiding the team's activities, fostering collaboration, and ensuring the successful execution of software projects. \n\nThe Software Team Leader combines technical expertise with leadership skills to drive innovation, mentor team members, and facilitate effective communication among stakeholders.",
        "responsibilities":"Team Leadership: Provide leadership and guidance to a team of software developers, fostering a collaborative and productive work environment. \nProject Planning and Coordination: Collaborate with the Software Project Leader and stakeholders to define project requirements, timelines, and deliverables. Ensure effective coordination among team members, ensuring tasks are assigned, and deadlines are met. In addition identifying and communicating the technical risks and debt for the activity to the Software Project Leader.\nCollaboration and Communication: Facilitate effective communication among team members, stakeholders, and other cross-functional teams. Foster collaboration and knowledge-sharing within the team. Act as a point of contact for escalations and issue resolution, promoting a proactive and solution-oriented approach.\nQuality Assurance and Process Improvement: Ensure the team follows software development best practices, quality assurance processes, and coding standards. Identify opportunities for process improvement and optimization. Collaborate with stakeholders to define and implement quality improvement initiatives.\nReporting & Metrics: Capture and communicate key data metrics for the development and report these into the Software Project Leader. In addition suggest improvements where appropriate using the data collected.",
        "projectDefault":true
    },
    {"roleId": "Software Technical Specialist",
        "purpose":"",
        "responsibilities":"",
        "employees":[
            { "fullName":"NEIL MORTON", "startDate":"2020-06-29", "endDate":"2021-12-31"},
            { "fullName":"GRANT LEWIS"},
            { "fullName":"TOM ROSS"},
            { "fullName":"ALICE BAKER"},
            { "fullName":"PETER BROOKSBANK"},
            { "fullName":"GARETH NIXON"},
            { "fullName":"VICKI HASABALA"}]
    },
    {"roleId": "Technical Expert",
        "purpose":"As a Software Technical Expert you are responsible for  developing your expertise through their regular involvement in project development activities and the applied research studies. A significant amount of time is dedicated to specific transversal activities within your technical expert scope. \n\nAs a Technical Expert you will \nBe a source of expertise for the benefit of the Directorate, the Projects, the Company \nAdvise on technological developments \nInfluence projects \nImpact research and innovation \nRepresent MBDA internally and externally\nCapture and spread knowledge\nTrain and develop future experts, facilitate the mentoring \/ tutoring of their sector of activity,\nAdvise the managers by facilitating decision making \nAdvocate industry recognised good practice through process and technology development.",
        "responsibilities":"Specific responsibilities are detailed in the Technical Expert Handbook and highlight the expectation appropriate to the expertise level. These responsibilities fall into the following categories:\nProject and “advanced concepts” area : Participation and delivery of specific reviews, technical tasks, risk identification and mitigation strategies on any given project.\nResearch Area: Improvement of skills and capability of the function through supporting the implementation of development plans, process improvement activities and enact technology assessment and insertion strategies. You’ll participate in the preparation of training material\nSkills \/ Capabilities: Be a technical focal point with the ability to coach (within own function and specialist domain) and suggest solutions to improve overall capability. Mentoring colleagues across software engineering and MBDA. You will participate to symposiums and conferences and make a summary and disseminate relevant information.\nBusiness & Strategy: You will be capable of technical assessment of supplier documentation, supplier competence and supplier capability",
        "employees":[
            { "fullName":"JOHN BRAGG"},
            { "fullName":"MATT SWIFT"},
            { "fullName":"DAMIEN TOVEY"},
            { "fullName":"DARREN WILKES"},
            { "fullName":"IAN WRIGHT"},
            { "fullName":"RAVI RAVIRAJ"},
            { "fullName":"ROBIN CLAY"}]
    },
    {"roleId": "Software Architect",
        "purpose":"The Software Architect will define and monitor the Structural and Temporal Architecture including the Internal\/External interfaces of the product to meet the requirements.\n\nThe Software Architect will collaborate with the relevant Technical Experts (TX) and interdependent multi-skills activities (Algorithms, Electronic Engineering, Systems, Safety, Cyber…) to define the software architecture.  \n\nThe Software Architect will share information and challenges to multiple audiences in a succinct manner to make sure that the architecture is understood and is compliant with customer needs. This includes influencing multiple stakeholders to ensure optimum solutions considering OTOCOQ delivery, provide technical consultancy\/mentoring at all stages of the software life cycle (from bid to validation). \n\nThe Software Architect will also consider longer term strategies, influencing the SE Technology Strategy, Software Product Lines, new technologies, obsolescence, new methods and tools etc.\n\nThe Software Architect will also Identify and promote the closure of Technical Debt (legacy software maintenance and reuse cost balance)",
        "responsibilities":"Take ownership of the full software architecture in collaboration with the SPL who is acting as the Design Authority assessing the different options and proposing the best trade-off against the different architectural drivers (functional and non functional requirements, DMR, testability, future growth, manufacturing implication and through life support…)\nIdentify, document and own the design drivers for the software solution e.g. real-time performance, safety, security, user experience, simplicity, reusability, flexibility\nProduce derived and emergent requirements capturing the assumptions and rationale\nDefine the architecture to a point where the implementation decisions do not affect the integrity of the architecture\nSupport the design activity and reviews making sure that the architecture robustness is demonstrated and preserved\nImprove the architecture based on implementation & Integration feedback\nContribute to the definition of the global verification and validation strategy and plan, supporting project test and integration activities\nApply Design for Modularity and Reuse principles ensuring sounds architectural principles are maintained (e.g. cohesion, coupling, encapsulation, design patterns, etc) and when possible identify opportunities for future software Product Lines\nConduct software product lines architecture and design activities contributing to develop reference architectures \nAdopt a transversal view across the projects to ensure consistency and take benefit of lessons learnt to improve the architectures\nContribute to knowledge Management in the architectural domain through sharing, peer reviews, mentoring of other architects\nSupport the SPL in technical topics of project management (impact analysis, technical risks, development logics, …)",
        "employees":[
            { "fullName":"NEIL MORTON", "start_date":"2022-01-01"},
            { "fullName":"IAN CAINE"},
            { "fullName":"NICK GLIDDON"},
            { "fullName":"STEPHEN HARVEY"},
            { "fullName":"MARK TALBOT-CAVES", "start_date":"2022-01-01"}]
    },
    {"roleId": "Software Engineer",
        "purpose":"The Software Engineer is a key member of the software development team, responsible for designing, developing, and maintaining high-quality software solutions. \n\nThey play a critical role in translating user requirements into functional code, implementing software best practices, and ensuring the scalability and performance of software applications. \n\nThe Software Engineer collaborates closely with cross-functional teams and other software staff including the Software Team Leader, Software Architects, Software Project Leader(s) and Software Quality Assurance, to deliver robust and innovative software solutions.",
        "responsibilities":"Software Development: Design, code, test, and debug software applications according to user requirements, MBDA TL1 policies and guidance. Develop clean, efficient, and maintainable code using appropriate programming languages, frameworks and existing frameworks. Implement software best practices, coding standards, and design patterns.\nRequirement Analysis: Collaborate with product managers, stakeholders, and end-users to gather and analyse software requirements. Translate requirements into technical specifications and design documentation. Identify potential challenges or roadblocks and propose effective solutions.\nQuality Assurance and Testing: Working in line with the Software Development Plans conduct unit testing and participate in code reviews to ensure code quality, adherence to coding standards, and performance optimization. Collaborate with quality assurance teams to define and execute effective testing strategies, ensuring software reliability, functionality, and security.\nCollaboration and Communication: Collaborate effectively with cross-functional teams, including Systems Engineers, Software Team Leader, Software Architects, Software Project Leader(s) and Software Quality Assurance, to understand project requirements, dependencies, and timelines. Communicate technical concepts and progress updates to both technical and non-technical stakeholders in a clear and concise manner.\nTroubleshooting and Issue Resolution: Investigate and debug software issues, identifying root causes and providing effective solutions. Collaborate with team members to resolve technical problems and ensure timely resolution of software defects.\nDocumentation and Knowledge Sharing: Create and maintain technical documentation, including system design documents, user guides, and API documentation. Share knowledge and best practices with team members through code reviews, technical presentations, and knowledge-sharing sessions. Maintain knowledge and understanding of software engineering in the wider world and application to SE.",
        "projectDefault":true,
        "employees":[
            {"fullName":"LAURENCE KEDWARD"},
            {"fullName":"MATT WRIGHT"},
            {"fullName":"BEN WILKINS"},
            {"fullName":"NICK APPLEGARTH"},
            {"fullName":"MARK LEWIS"},
            {"fullName":"OLIVER PRESS"},
            {"fullName":"JACK BIGGS"},
            {"fullName":"CURTIS LIEU"},
            {"fullName":"PETER JOHN EUCLID FONSECA"},
            {"fullName":"KURT HAMER"},
            {"fullName":"JOHN HARVEY"},
            {"fullName":"JOSEPH DARE"},
            {"fullName":"KEITH WHITE"},
            {"fullName":"NEIL DAVIES"},
            {"fullName":"KAREN GOODE"},
            {"fullName":"MIKE HINDS"},
            {"fullName":"JAMES CROFTS"}]    
    },
    {"roleId": "Software Engineer - Security",
        "purpose":"The Software Security Engineer is responsible for ensuring the security and integrity of software products throughout their development lifecycle – including the software tooling and infrastructure. \n\nThey play a crucial role in identifying potential vulnerabilities and implementing appropriate security measures to protect against threats and attacks. \n\nThe Software Security Engineer collaborates with software development teams, Software Architects, and other stakeholders to integrate security best practices into software design, coding, testing, and deployment processes.",
        "responsibilities":"Security Analysis and Risk Assessment: Conduct thorough security assessments and risk analyses of software systems, identifying potential vulnerabilities and threats. Assess the impact of security risks and develop mitigation strategies.\nSecurity Architecture and Design: Collaborate with Software Architects and software development teams to incorporate security requirements and best practices into software design and architecture. Conduct software security reviews and provide recommendations.\nSecure Coding and Development: Review code and development practices to identify security flaws and recommend remediation strategies. Promote secure coding techniques and standards within the development team, such as input validation, secure authentication, and access control mechanisms.\nSecurity Testing: Plan and execute security testing activities, including penetration testing, vulnerability scanning, and code review. Analyse test results, identify security weaknesses, and work with development teams to address them.\nSecurity Compliance and Standards: Stay up-to-date with industry security standards, regulations, and best practices. Ensure software systems comply with relevant security requirements and standards.\nSecurity Documentation and Reporting: Maintain accurate and up-to-date documentation of security processes, procedures, and guidelines. Generate security reports and metrics to track security-related activities, vulnerabilities, and remediation efforts.",
        "employees":[
            {"fullName":"JENNIFER KENNING"}]
    },
    {"roleId": "Software Engineer - Safety",
        "purpose":"The purpose of a software safety engineer is to ensure that software systems are safe and reliable for use by their intended users. This involves identifying and assessing potential hazards or risks associated with software systems and implementing measures to mitigate or eliminate these risks.\n\nOverall, the purpose of a software safety engineer is to ensure that software systems are safe and reliable for use by their intended users, and to mitigate or eliminate potential hazards or risks associated with these systems.",
        "responsibilities":"Identifying potential hazards or risks associated with software systems: The software safety engineer must be able to identify potential hazards or risks associated with software systems, such as data loss, system crashes, or security vulnerabilities.\nAssessing the severity of identified risks: The software safety engineer must be able to assess the severity of identified risks and determine the potential impact on users, the environment, or the business.\nDeveloping and implementing safety measures: Based on their risk assessment, the software safety engineer must develop and implement measures to mitigate or eliminate identified risks. This may involve modifying software code, designing new features, or implementing new procedures or policies.\nCollaborating with other engineers and stakeholders: The software safety engineer must collaborate with other engineers, stakeholders, and customers to ensure that safety requirements are understood and implemented effectively.\nEnsuring compliance with safety standards: The software safety engineer must ensure that software systems comply with relevant safety standards and regulations and BMS2164."},
    {"roleId": "Software Engineer - Verification and Validation",
        "purpose":"The Software Verification and Validation (V&V) Engineer plays a critical role in ensuring the quality and reliability of software products. \n\nThey are responsible for designing, implementing, and executing comprehensive testing strategies and methodologies to validate software systems, identify defects, and ensure compliance with requirements. \n\nThe V&V Engineer collaborates closely with software developers, product managers, and quality assurance teams to drive quality improvements and deliver robust, high-performing software solutions.",
        "responsibilities":"Test Planning and Strategy: Develop and implement test plans, test cases, and test scripts based on requirements and functional specifications. In compliance with the Software Verification Plan. Define testing strategies, including unit testing, integration testing, system testing, and performance testing.\nTest Execution: Execute test cases, perform functional and regression testing, and identify software defects and anomalies. Monitor test progress, analyse test results, and track defects using appropriate tools and methodologies.\nTest Automation: Design and develop automated test scripts and frameworks to enhance efficiency and effectiveness of testing processes. Identify opportunities for test automation and implement suitable tools and frameworks.\nTest Documentation: Create and maintain detailed test documentation, including test plans, test procedures, and test reports. Document and track defects, ensuring timely resolution and retesting.\nCollaboration and Communication: Collaborate closely with software development teams, product managers, and other stakeholders to understand requirements and participate in design reviews. Effectively communicate test results, issues, and recommendations to the project team and management.\nContinuous Improvement: Identify areas for process improvement and contribute to the development and implementation of best practices, tools, and methodologies related to software V&V. \nCompliance and Quality Assurance: Ensure software products meet the required quality standards, regulatory requirements, and industry best practices. Participate in audits and inspections to ensure adherence to relevant standards and guidelines."},
    {"roleId": "Software Engineer - Scrum Master",
        "purpose":"The Scrum Master is the team role responsible for ensuring the team lives agile values and principles and follows the processes and practices that the team agreed they would use.\n\nThe deployment of the Software Scrum Master role can be tailored in line with the project need, for example in some cases it may be appropriate for the Software Project Leader to take on this role, or for the role to be delegated to an engineer within the team. \n\nThe deployment and set up of the Software Scrum Master role will be agreed between the Software Project Leader and the Software Group Leader.",
        "responsibilities":"Enabling high performance, promoting scrum practices and continuous improvement within\/for the team.\nLead, train, and coach the organisation in its scrum adoption, championing agile best practices.\nOrganise, Facilitate and drive the Scrum events and artefacts as appropriate:\nSprint activities such as Daily Scrums, Sprint Review, Sprint Retrospectives, definition of done...etc.\nInputs into the improvement of the Software Engineering Process and to align the process into an agile ways working.\nMetrics (definition\/selection, collection, reporting) and analysis to improve the way the team work and collectively deliver productivity improvements, making use of metrics to inform of impediments and opportunities.\nEscalate and highlight to the software product owner\/SPL about outside interruptions and distractions to ensure the focus is on software engineering activities..\nFacilitate collaboration between the development Team and other directorates (System Design, ERA, EDA, Product Owner), to meet the sprint goals. \nSupport the Software Product Owner in techniques to derive and manage the product backlog.\nFacilitate the removal of obstacles that may inhibit the teams progress, by informing the appropriate stakeholders of issues and working with the Software Product Owner\/SPL to remove impediments to progress (Resources, Ensure blockers are actioned from the retrospective etc.)."},
    {"roleId": "Software Engineer - DevOps",
        "purpose":"The DevOps Software Engineer role primary purpose is to bridge the gap between software development and IT operations, fostering a collaborative and efficient environment that enables the continuous delivery of high-quality software. \n\nThe DevOps Software Engineer collaborates closely with software development teams, quality assurance, and managers to improve the facilitation of software engineering activities and stability based on user feedback and reported issues. This also includes making optimisation and supporting development teams to be lean and agile for efficiency.",
        "responsibilities":"DevOps Integration: Collaborate with cross-functional teams to integrate DevOps practices into the software development lifecycle. Implement and maintain automated deployment pipelines to facilitate continuous integration and continuous delivery (CI\/CD).\nInfrastructure as Code (IaC): Utilize Infrastructure as Code principles to automate the provisioning and management of infrastructure resources.\nConfiguration Management: Manage and automate configuration settings for various software components. Implement configuration drift detection and correction mechanisms.\nRelease Management: Oversee the planning and execution of software releases, ensuring minimal downtime and smooth transitions. Collaborate with development and testing teams to establish release timelines and milestones.\nMonitoring and Logging: Implement monitoring solutions to track system performance, identify issues, and optimize resources. Establish robust logging mechanisms for troubleshooting and auditing purposes.\nSecurity Integration:  Collaborate with security teams to embed security best practices into the DevOps processes. Implement and maintain security measures at every stage of the software development lifecycle.\nCollaboration and Documentation: Foster a collaborative environment by working closely with development, testing, and operations teams. Document and share best practices, standards, and procedures to ensure knowledge transfer and maintain a comprehensive knowledge base.\nAutomation and Scripting: Develop and maintain automation scripts to streamline repetitive tasks and ensure efficiency in DevOps workflows. Continuously seek opportunities to automate manual processes, reducing the risk of human error.\nAdopting New Technologies: Stay updated on emerging technologies and industry trends related to DevOps practices. Evaluate and recommend new tools or methodologies that can enhance the efficiency and effectiveness of the DevOps pipeline."},
    {"roleId": "Software Solutions Engineer",
        "purpose":"The Software Solutions Engineer plays a vital role in providing technical support and assistance to end-users, customers, and internal teams using software products. \n\nThey are responsible for troubleshooting and resolving software-related issues, answering inquiries, and ensuring customer satisfaction. \n\nThe Software Solutions Engineer collaborates closely with software development teams, quality assurance, and managers to improve the facilitation of software engineering activities and stability based on user feedback and reported issues.",
        "responsibilities":"Technical Support: Provide timely and effective technical support to end-users, customers, and internal stakeholders, addressing software-related inquiries, issues, and requests. Troubleshoot problems, identify root causes, and provide appropriate solutions or workarounds.\nIssue Resolution and Troubleshooting: Investigate and analyse reported software issues, utilizing debugging tools, logs, and error messages. Collaborate with software development teams to reproduce, diagnose, and resolve technical issues.\nCustomer Communication: Interact with customers and end-users to understand their technical concerns and requirements. Provide clear and concise explanations of technical concepts, instructions, and resolutions to both technical and non-technical individuals.\nDocumentation and Knowledge Base: Create and maintain technical documentation, including FAQs, troubleshooting guides, and knowledge base articles. Contribute to the development and maintenance of an accessible knowledge base for both customers and support team members.\nEscalation Management: Escalate complex or critical issues to appropriate teams or management, ensuring timely resolution and effective communication with stakeholders. Follow established protocols and procedures for issue escalation and resolution.\nProduct Improvement and Feedback: Gather user feedback, bug reports, and enhancement requests to contribute to the improvement of software products. Collaborate with development teams and product managers to communicate user needs and suggest product enhancements or bug fixes.\nCollaboration with Internal Teams: Work closely with software development teams, quality assurance, and product managers to understand software functionality, features, and limitations. Provide insights and feedback from support interactions to drive product improvements and user experience enhancements."}

]}